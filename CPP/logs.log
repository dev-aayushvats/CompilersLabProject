Output from Lexical Analysis:
  (INT, int)
  (IDENTIFIER, a)
  (EQUALS, =)
  (NUMBER, 10)
  (SEMICOLON, ;)
  (INT, int)
  (IDENTIFIER, b)
  (SEMICOLON, ;)
  (CHAR_TYPE, char)
  (IDENTIFIER, c)
  (EQUALS, =)
  (CHAR, x)
  (SEMICOLON, ;)
  (CHAR_TYPE, char)
  (IDENTIFIER, d)
  (SEMICOLON, ;)
  (IDENTIFIER, b)
  (EQUALS, =)
  (IDENTIFIER, a)
  (PLUS, +)
  (NUMBER, 3)
  (MULT, *)
  (NUMBER, 2)
  (MINUS, -)
  (NUMBER, 8)
  (DIV, /)
  (NUMBER, 4)
  (SEMICOLON, ;)
  (INT, int)
  (IDENTIFIER, e)
  (EQUALS, =)
  (IDENTIFIER, b)
  (PLUS, +)
  (NUMBER, 5)
  (SEMICOLON, ;)
  (IDENTIFIER, d)
  (EQUALS, =)
  (IDENTIFIER, c)
  (SEMICOLON, ;)
  (INT, int)
  (IDENTIFIER, f)
  (EQUALS, =)
  (IDENTIFIER, e)
  (MULT, *)
  (NUMBER, 2)
  (PLUS, +)
  (IDENTIFIER, a)
  (MINUS, -)
  (IDENTIFIER, b)
  (SEMICOLON, ;)

Output from Syntax Analysis (AST):
===== Abstract Syntax Tree (AST) =====
PROGRAM
├── DECLARATION_INT (a)
│   └── NUMBER (10)
├── DECLARATION_INT (b)
├── DECLARATION_CHAR_TYPE (c)
│   └── CHAR (x)
├── DECLARATION_CHAR_TYPE (d)
├── ASSIGNMENT (b)
│   └── BINOP (-)
│       ├── BINOP (+)
│       │   ├── IDENTIFIER (a)
│       │   └── BINOP (*)
│       │       ├── NUMBER (3)
│       │       └── NUMBER (2)
│       └── BINOP (/)
│           ├── NUMBER (8)
│           └── NUMBER (4)
├── DECLARATION_INT (e)
│   └── BINOP (+)
│       ├── IDENTIFIER (b)
│       └── NUMBER (5)
├── ASSIGNMENT (d)
│   └── IDENTIFIER (c)
└── DECLARATION_INT (f)
    └── BINOP (-)
        ├── BINOP (+)
        │   ├── BINOP (*)
        │   │   ├── IDENTIFIER (e)
        │   │   └── NUMBER (2)
        │   └── IDENTIFIER (a)
        └── IDENTIFIER (b)
======================================

Output from Semantic Analysis (Symbol Table):
  f: int
  e: int
  c: char
  b: int
  d: char
  a: int